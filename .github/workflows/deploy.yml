name: Deploy to EC2

on:
  push:
    branches:
      - feature/deploy-testing

jobs:
  Deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    env:
      API_VERSION: ${{ secrets.API_VERSION }}
      PASSPORT_SECRET: ${{ secrets.PASSPORT_SECRET }}
      USE_CLOUD_DB: ${{ secrets.USE_CLOUD_DB }}
      PORT: ${{ secrets.PORT }}
      MONGODB_URI_LOCAL: ${{ secrets.MONGODB_URI_LOCAL }}
      MONGODB_URI_CLOUD: ${{ secrets.MONGODB_URI_CLOUD }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      GOOGLE_AUTH_CALLBACK_URL: ${{ secrets.GOOGLE_AUTH_CALLBACK_URL }}
      SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
      WHITE_LIST: ${{ secrets.WHITE_LIST }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Install dependencies
        run: npm install

      - name: Run tests
        id: test
        run: npm run test2
      
      - name: Connect to EC2
        uses: appleboy/ssh-action@master
        if: steps.test.outcome == 'success'
        with:
          host: ${{ secrets.EC2_HOST }} # Ipv4 address of EC2 instance
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }} # Add public key to EC2 instance and private key to Github secrets
          envs: API_VERSION,PASSPORT_SECRET,USE_CLOUD_DB,PORT,MONGODB_URI_LOCAL,MONGODB_URI_CLOUD,GOOGLE_CLIENT_ID,GOOGLE_CLIENT_SECRET,GOOGLE_AUTH_CALLBACK_URL,SESSION_SECRET,WHITE_LIST
          script: |
            if [ ! -d "tabcolab-api" ]; then 
              git clone -b feature/deploy-testing git@github.com:YiHsinTseng/tabcolab-api.git
              cd tabcolab-api
            else
              cd tabcolab-api
              git fetch origin
              git reset --hard origin/feature/deploy-testing
            fi
            echo API_VERSION=$API_VERSION > .env
            echo PASSPORT_SECRET=$PASSPORT_SECRET >> .env
            echo USE_CLOUD_DB=$USE_CLOUD_DB >> .env
            echo PORT=$PORT >> .env
            echo MONGODB_URI_LOCAL=$MONGODB_URI_LOCAL >> .env
            echo MONGODB_URI_CLOUD=$MONGODB_URI_CLOUD >> .env
            echo GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID >> .env
            echo GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET >> .env
            echo GOOGLE_AUTH_CALLBACK_URL=$GOOGLE_AUTH_CALLBACK_URL >> .env
            echo SESSION_SECRET=$SESSION_SECRET >> .env
            echo WHITE_LIST=$WHITE_LIST >> .env
            sudo chmod 600 .env
            cd Docker
            sudo docker system prune -a -f
            docker-compose down --rmi all
            docker-compose up --build -d
